/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.MarketingAgency;

import Business.Enterprise.AdvertiserEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.MarketingAgencyEnterprise;
import Business.WorkRequest.AdvertiserEnrollRequest;
import Business.WorkRequest.WorkRequest;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abhinav
 */
public class ManageAdvertiserRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private MarketingAgencyEnterprise enterprise;
    private UserAccount account;
    /**
     * Creates new form ManageAdvertiserRequestJPanel
     */
    public ManageAdvertiserRequestJPanel(JPanel upc, Enterprise enterprise, UserAccount ua) {
        initComponents();
        this.userProcessContainer = upc;
        this.enterprise = (MarketingAgencyEnterprise) enterprise;
        this.account = ua;
        
        populateTable();
    }
    
    private void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel) requestjTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : enterprise.getWorkQueue().getWorkQueue())
        {
            if(request instanceof AdvertiserEnrollRequest)
            {
                Object[] row = new Object[5];
                row[0] = request.getSender();
                row[1] = ((AdvertiserEnrollRequest)request).getAdvertiserEnterprise();
                row[2] = request.getReceiver();
                row[3] = request;
                row[4] = request.getComments();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestjTable = new javax.swing.JTable();
        assignjButton = new javax.swing.JButton();
        processjButton = new javax.swing.JButton();
        approvejRadioButton = new javax.swing.JRadioButton();
        rejectjRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        commentsjTextField = new javax.swing.JTextField();
        backJButton = new javax.swing.JButton();

        requestjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Advertiser Name", "Advertiser Enterprise", "Assigned to", "Status", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestjTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(requestjTable);

        assignjButton.setText("Assign to me");
        assignjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignjButtonActionPerformed(evt);
            }
        });

        processjButton.setText("Process");
        processjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processjButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(approvejRadioButton);
        approvejRadioButton.setSelected(true);
        approvejRadioButton.setText("Approve");

        buttonGroup1.add(rejectjRadioButton);
        rejectjRadioButton.setText("Reject");

        jLabel1.setText("Comments:");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(292, 292, 292)
                    .addComponent(assignjButton)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(commentsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rejectjRadioButton)
                            .addComponent(approvejRadioButton)
                            .addComponent(processjButton)))
                    .addGap(133, 133, 133)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backJButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(assignjButton)
                .addGap(18, 18, 18)
                .addComponent(approvejRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rejectjRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(commentsjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(processjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void assignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButtonActionPerformed
        
        int selectedRow = requestjTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a request from the table");
            return;
        }
        
        WorkRequest request = (WorkRequest) requestjTable.getValueAt(selectedRow, 3);
        if(request.getStatus().equals("Approved") || request.getStatus().equals("Rejected"))
        {
            JOptionPane.showMessageDialog(null, "Request already processed");
            return;
        }
        else
        {
            request.setReceiver(account);
            request.setStatus("Processing");
            populateTable();
        }
    }//GEN-LAST:event_assignjButtonActionPerformed

    private void processjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processjButtonActionPerformed
        
        int selectedRow = requestjTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a request from the table");
            return;
        }
        
        WorkRequest request = (WorkRequest) requestjTable.getValueAt(selectedRow, 3);
        if(request.getStatus().equals("Approved") || request.getStatus().equals("Rejected"))
        {
            JOptionPane.showMessageDialog(null, "Request already processed");
            return;
        }
        else
        {
            String comments = commentsjTextField.getText();
            DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
            Date date = new Date();
            request.setResolveDate(dateFormat.format(date));
            request.setComments(comments);
            request.setReceiver(account);
            if(approvejRadioButton.isSelected())
            {
                request.setStatus("Approved");
                AdvertiserEnterprise advertiserEnterprise = (AdvertiserEnterprise) requestjTable.getValueAt(selectedRow, 1);
                enterprise.getAdvertiserEnterpriseList().add(advertiserEnterprise);
                advertiserEnterprise.setAgency(enterprise);
            }
            else
            {
                request.setStatus("Rejected");
            }
            populateTable();
        }
    }//GEN-LAST:event_processjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton approvejRadioButton;
    private javax.swing.JButton assignjButton;
    private javax.swing.JButton backJButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField commentsjTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processjButton;
    private javax.swing.JRadioButton rejectjRadioButton;
    private javax.swing.JTable requestjTable;
    // End of variables declaration//GEN-END:variables
}
